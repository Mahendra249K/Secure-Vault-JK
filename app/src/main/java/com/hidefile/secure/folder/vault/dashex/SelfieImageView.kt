package com.hidefile.secure.folder.vault.dasheximport android.annotation.SuppressLintimport android.content.Contextimport android.os.Bundleimport android.view.KeyEventimport android.view.Viewimport android.widget.ImageViewimport androidx.appcompat.widget.Toolbarimport androidx.viewpager.widget.ViewPagerimport androidx.viewpager.widget.ViewPager.OnPageChangeListenerimport com.hidefile.secure.folder.vault.Rimport com.hidefile.secure.folder.vault.cluecanva.SelfieIEmimport com.hidefile.secure.folder.vault.cluecanva.VTvimport com.hidefile.secure.folder.vault.dpss.SelfieImageViewAdpclass SelfieImageView : FoundationActivity(), View.OnClickListener {    var postion = 0    var fullImageAdapter: SelfieImageViewAdp? = null    var view_pager: ViewPager? = null    var mContext: Context? = null    var tv_tital: VTv? = null    var view_topview: View? = null    var photoItems: ArrayList<SelfieIEm>? = ArrayList()    var idNative = ""    var iv_share: ImageView? = null    @SuppressLint("MissingInflatedId")    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)//        requestWindowFeature(Window.FEATURE_NO_TITLE)        setContentView(R.layout.hidden_selfie_full_view)        mContext = this@SelfieImageView//        Common_Adm.getInstance().AmNativeLoad(activity, findViewById<View>(R.id.llNativeSmall) as ViewGroup, false)        postion = intent.getIntExtra("postion", 0)        photoItems = intent.getSerializableExtra("listIdPics") as ArrayList<SelfieIEm>?        view_topview = findViewById(R.id.view_topview)        iv_share = findViewById(R.id.iv_share)        val toolbar = findViewById<Toolbar>(R.id.main_toolbar)        setSupportActionBar(toolbar)        tv_tital = toolbar.findViewById(R.id.tv_tital)            tv_tital?.setText(                photoItems!![postion].hiddenSelfieName!!.replaceFirst(".".toRegex(), "")            )        toolbar.findViewById<View>(R.id.iv_back).setOnClickListener { finish() }        view_pager = findViewById(R.id.view_pager)        Init()    }    private fun Init() {        fullImageAdapter = SelfieImageViewAdp(this, photoItems!!, this)        view_pager!!.adapter = fullImageAdapter        view_pager!!.currentItem = postion        view_pager!!.addOnPageChangeListener(object : OnPageChangeListener {            override fun onPageScrolled(                position: Int,                positionOffset: Float,                positionOffsetPixels: Int            ) {            }            override fun onPageSelected(position: Int) {                tv_tital!!.text =                    photoItems!![position].hiddenSelfieName!!.replaceFirst(".".toRegex(), "")            }            override fun onPageScrollStateChanged(state: Int) {}        })        iv_share!!.setOnClickListener { v: View? -> }    }    override fun onUserLeaveHint() {        super.onUserLeaveHint() }    override fun onUserInteraction() {        super.onUserInteraction() }    override fun onResume() {        super.onResume() }    override fun onPause() {        super.onPause() }    override fun onStop() {        super.onStop() }    override fun onKeyDown(keyCode: Int, event: KeyEvent): Boolean {        if (keyCode == KeyEvent.KEYCODE_HOME) { }        return super.onKeyDown(keyCode, event) }    override fun onClick(v: View) {}}