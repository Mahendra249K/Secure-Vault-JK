package com.hidefile.secure.folder.vault.dpssimport android.app.Activityimport android.content.Contextimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.widget.RelativeLayoutimport com.Joaquin.thiago.ListIdPicimport androidx.viewpager.widget.PagerAdapterimport androidx.viewpager.widget.ViewPagerimport com.hidefile.secure.folder.vault.cluecanva.ScaleOutImgimport com.bumptech.glide.request.RequestOptionsimport com.bumptech.glide.Glideimport com.hidefile.secure.folder.vault.Rimport java.util.ArrayListclass IvFullScreenAdp(    private val _activity: Activity,    val allItemDate: ArrayList<ListIdPic>,    val onClickListener: View.OnClickListener) : PagerAdapter() {    private val inflater: LayoutInflater    override fun getCount(): Int {        return allItemDate.size    }    fun getItemDate(i: Int): ListIdPic {        return allItemDate[i]    }    fun removeData(postion: Int) {        allItemDate.removeAt(postion)        notifyDataSetChanged()    }    fun removePage(viewPager: ViewPager, position: Int) {        if (position >= 0 && position < allItemDate.size && allItemDate.size > 1) {            allItemDate.removeAt(position)            viewPager.adapter = this            if (allItemDate.size >= 1) viewPager.currentItem = position            notifyDataSetChanged()        } else {            _activity.finish()        }    }    override fun instantiateItem(container: ViewGroup, position: Int): Any {        val imgDisplay: ScaleOutImg        val viewLayout = inflater.inflate(R.layout.fullscreen_image, container, false)        imgDisplay = viewLayout.findViewById(R.id.selfieImgDisplay)        val options = RequestOptions()            .placeholder(R.drawable.ic_placeholder)        imgDisplay.visibility = View.VISIBLE        Glide.with(_activity)            .load(allItemDate[position].getNewPath())            .apply(options)            .into(imgDisplay)        imgDisplay.setOnClickListener(onClickListener)        container.addView(viewLayout)        return viewLayout    }    override fun isViewFromObject(view: View, `object`: Any): Boolean {        return view === `object`    }    override fun destroyItem(container: ViewGroup, position: Int, `object`: Any) {        container.removeView(`object` as RelativeLayout)    }    init {        inflater = _activity.getSystemService(Context.LAYOUT_INFLATER_SERVICE) as LayoutInflater    }}