package com.hidefile.secure.folder.vault.dpssimport android.app.Activityimport android.content.Contextimport android.net.Uriimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.widget.RelativeLayoutimport android.widget.TextViewimport com.hidefile.secure.folder.vault.cluecanva.SelfieIEmimport androidx.viewpager.widget.PagerAdapterimport com.hidefile.secure.folder.vault.cluecanva.ScaleOutImgimport com.bumptech.glide.request.RequestOptionsimport com.bumptech.glide.Glideimport com.hidefile.secure.folder.vault.Rimport java.io.Fileimport java.util.ArrayListclass SelfieImageViewAdp(    private val _activity: Activity,    imagePaths: ArrayList<SelfieIEm>,    var onClickListener: View.OnClickListener) : PagerAdapter() {    var allItemDate = ArrayList<SelfieIEm>()    private var inflater: LayoutInflater? = null    override fun getCount(): Int {        return allItemDate.size    }    fun getItemDate(i: Int): SelfieIEm {        return allItemDate[i]    }    fun removeData(postion: Int) {        allItemDate.removeAt(postion)        notifyDataSetChanged()    }    override fun isViewFromObject(view: View, `object`: Any): Boolean {        return view === `object`    }    override fun instantiateItem(container: ViewGroup, position: Int): Any {        val imgDisplay: ScaleOutImg        var tv_path: TextView        val rel_root: RelativeLayout        inflater = _activity            .getSystemService(Context.LAYOUT_INFLATER_SERVICE) as LayoutInflater        val viewLayout = inflater!!.inflate(R.layout.fullscreen_image, container, false)        imgDisplay = viewLayout.findViewById(R.id.selfieImgDisplay)        rel_root = viewLayout.findViewById(R.id.full_Img_view)        rel_root.setOnClickListener { v: View? -> }        val mediaFile = File(allItemDate[position].hiddenSelfiePath)        val options = RequestOptions()            .placeholder(R.drawable.ic_placeholder)        imgDisplay.visibility = View.VISIBLE        val parth = mediaFile.absolutePath        val targetLocation = File(parth)        Glide.with(_activity)            .load(Uri.fromFile(targetLocation))            .apply(options)            .into(imgDisplay)        imgDisplay.setOnClickListener(onClickListener)        container.addView(viewLayout)        return viewLayout    }    override fun destroyItem(container: ViewGroup, position: Int, `object`: Any) {        container.removeView(`object` as RelativeLayout)    }    init {        allItemDate = imagePaths    }}